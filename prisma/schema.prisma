generator client {
  provider = "prisma-client-py"
  recursive_type_depth = 5
}

datasource db {
    provider = "postgresql"
    url = env("DATABASE_URL")
}


model user { 
    id               Int       @id @default(autoincrement())
    username         String
    email            String    @unique
    hashedpassword   String
    role             String    @default("user")
    created_at       DateTime  @default(now())
    updated_at       DateTime  @updatedAt

    articles         article[]
    comments         comment[]
    likes            like[]
}

model article {
    id              Int      @id @default(autoincrement())
    title           String
    content         String
    views           Int      @default(0)
    created_at      DateTime @default(now())
    updated_at      DateTime @updatedAt
    likes_count     Int      @default(0)
    files_count     Int      @default(0)

    user_id         Int
    user            user     @relation(fields: [user_id], references: [id])

    comments        comment[]
    likes           like[]
    categories      category_to_article[]
    files           file[]
}

model category {
    id              Int      @id @default(autoincrement())
    name            String

    articles      category_to_article[]
}

model category_to_article {
    article_id      Int
    category_id     Int

    article         article  @relation(fields: [article_id], references: [id], onDelete: Cascade)
    category        category @relation(fields: [category_id], references: [id])

    @@id([article_id, category_id])
}

model comment {
    id              Int      @id @default(autoincrement())
    content         String
    created_at      DateTime @default(now())
    updated_at      DateTime @updatedAt

    article_id      Int
    user_id         Int

    article         article  @relation(fields: [article_id], references: [id], onDelete: Cascade)
    user            user     @relation(fields: [user_id], references: [id])
}

model like {
    created_at      DateTime @default(now())
    updated_at      DateTime @updatedAt

    article_id      Int
    user_id         Int

    article         article  @relation(fields: [article_id], references: [id], onDelete: Cascade)
    user            user     @relation(fields: [user_id], references: [id])

    @@id([article_id, user_id])
}

model file {
    id              Int      @id @default(autoincrement())
    url             String
    filename        String
    mimetype        String
    created_at      DateTime @default(now())
    updated_at      DateTime @updatedAt

    article_id      Int
    article         article  @relation(fields: [article_id], references: [id], onDelete: Cascade)
}
